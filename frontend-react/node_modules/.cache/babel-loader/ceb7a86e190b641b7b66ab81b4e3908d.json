{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aakash.kadakia\\\\workspace\\\\reactDemo\\\\frontend-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aakash.kadakia\\\\workspace\\\\reactDemo\\\\frontend-react\\\\src\\\\MyForm.js\";\nimport React from 'react';\nconst inputParsers = {\n  date(input) {\n    const _input$split = input.split('/'),\n          _input$split2 = _slicedToArray(_input$split, 3),\n          month = _input$split2[0],\n          day = _input$split2[1],\n          year = _input$split2[2];\n\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n  },\n\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n\n  number(input) {\n    return parseFloat(input);\n  }\n\n};\n\nclass MyForm extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n\n      if (parserName) {\n        const parser = inputParsers[parserName];\n        const parsedValue = parser(data.get(name));\n        data.set(name, parsedValue);\n      }\n    }\n\n    fetch('/newEntry', {\n      method: 'POST',\n      body: data\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"id\",\n      type: \"text\",\n      \"data-parse\": \"uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      \"data-parse\": \"uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Send data!\"));\n  }\n\n}\n\nexport default MyForm;","map":{"version":3,"sources":["C:\\Users\\aakash.kadakia\\workspace\\reactDemo\\frontend-react\\src\\MyForm.js"],"names":["React","inputParsers","date","input","split","month","day","year","uppercase","toUpperCase","number","parseFloat","MyForm","Component","constructor","handleSubmit","bind","event","preventDefault","form","target","data","FormData","name","keys","elements","parserName","dataset","parse","parser","parsedValue","get","set","fetch","method","body","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,CAACC,KAAD,EAAQ;AAAA,yBACiBA,KAAK,CAACC,KAAN,CAAY,GAAZ,CADjB;AAAA;AAAA,UACHC,KADG;AAAA,UACIC,GADJ;AAAA,UACSC,IADT;;AAEV,qBAAUA,IAAV,cAAkBF,KAAlB,cAA2BC,GAA3B;AACD,GAJkB;;AAKnBE,EAAAA,SAAS,CAACL,KAAD,EAAQ;AACf,WAAOA,KAAK,CAACM,WAAN,EAAP;AACD,GAPkB;;AAQnBC,EAAAA,MAAM,CAACP,KAAD,EAAQ;AACZ,WAAOQ,UAAU,CAACR,KAAD,CAAjB;AACD;;AAVkB,CAArB;;AAaA,MAAMS,MAAN,SAAqBZ,KAAK,CAACa,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,IAAb,CAAb;;AAEA,SAAK,IAAII,IAAT,IAAiBF,IAAI,CAACG,IAAL,EAAjB,EAA8B;AAC5B,YAAMrB,KAAK,GAAGgB,IAAI,CAACM,QAAL,CAAcF,IAAd,CAAd;AACA,YAAMG,UAAU,GAAGvB,KAAK,CAACwB,OAAN,CAAcC,KAAjC;;AAEA,UAAIF,UAAJ,EAAgB;AACd,cAAMG,MAAM,GAAG5B,YAAY,CAACyB,UAAD,CAA3B;AACA,cAAMI,WAAW,GAAGD,MAAM,CAACR,IAAI,CAACU,GAAL,CAASR,IAAT,CAAD,CAA1B;AACAF,QAAAA,IAAI,CAACW,GAAL,CAAST,IAAT,EAAeO,WAAf;AACD;AACF;;AAEDG,IAAAA,KAAK,CAAC,WAAD,EAAc;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,IAAI,EAAEd;AAFW,KAAd,CAAL;AAID;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKrB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,oBAAW,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,oBAAW,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,CADF;AAkBD;;AA/CkC;;AAkDrC,eAAeH,MAAf","sourcesContent":["import React from 'react';\r\n\r\nconst inputParsers = {\r\n  date(input) {\r\n    const [month, day, year] = input.split('/');\r\n    return `${year}-${month}-${day}`;\r\n  },\r\n  uppercase(input) {\r\n    return input.toUpperCase();\r\n  },\r\n  number(input) {\r\n    return parseFloat(input);\r\n  },\r\n};\r\n\r\nclass MyForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const data = new FormData(form);\r\n\r\n    for (let name of data.keys()) {\r\n      const input = form.elements[name];\r\n      const parserName = input.dataset.parse;\r\n\r\n      if (parserName) {\r\n        const parser = inputParsers[parserName];\r\n        const parsedValue = parser(data.get(name));\r\n        data.set(name, parsedValue);\r\n      }\r\n    }\r\n\r\n    fetch('/newEntry', {\r\n      method: 'POST',\r\n      body: data,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          name=\"id\"\r\n          type=\"text\"\r\n          data-parse=\"uppercase\"\r\n        />\r\n\r\n\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          data-parse=\"uppercase\"\r\n        />\r\n\r\n        <button>Send data!</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyForm;"]},"metadata":{},"sourceType":"module"}